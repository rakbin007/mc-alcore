{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { PermissionStatus, EventEmitter, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport ExponentPedometer from \"./ExponentPedometer\";\nvar PedometerEventEmitter = new EventEmitter(ExponentPedometer);\nexport function watchStepCount(callback) {\n  return PedometerEventEmitter.addListener('Exponent.pedometerUpdate', callback);\n}\nexport function getStepCountAsync(_x, _x2) {\n  return _getStepCountAsync.apply(this, arguments);\n}\nfunction _getStepCountAsync() {\n  _getStepCountAsync = _asyncToGenerator(function* (start, end) {\n    if (!ExponentPedometer.getStepCountAsync) {\n      throw new UnavailabilityError('ExponentPedometer', 'getStepCountAsync');\n    }\n    invariant(start <= end, 'Pedometer: The start date must precede the end date.');\n    return yield ExponentPedometer.getStepCountAsync(start.getTime(), end.getTime());\n  });\n  return _getStepCountAsync.apply(this, arguments);\n}\nexport function isAvailableAsync() {\n  return _isAvailableAsync.apply(this, arguments);\n}\nfunction _isAvailableAsync() {\n  _isAvailableAsync = _asyncToGenerator(function* () {\n    return yield ExponentPedometer.isAvailableAsync();\n  });\n  return _isAvailableAsync.apply(this, arguments);\n}\nexport function getPermissionsAsync() {\n  return _getPermissionsAsync.apply(this, arguments);\n}\nfunction _getPermissionsAsync() {\n  _getPermissionsAsync = _asyncToGenerator(function* () {\n    if (!ExponentPedometer.getPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return yield ExponentPedometer.getPermissionsAsync();\n    }\n  });\n  return _getPermissionsAsync.apply(this, arguments);\n}\nexport function requestPermissionsAsync() {\n  return _requestPermissionsAsync.apply(this, arguments);\n}\nfunction _requestPermissionsAsync() {\n  _requestPermissionsAsync = _asyncToGenerator(function* () {\n    if (!ExponentPedometer.requestPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return yield ExponentPedometer.requestPermissionsAsync();\n    }\n  });\n  return _requestPermissionsAsync.apply(this, arguments);\n}\nvar defaultPermissionsResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED\n};\nexport { PermissionStatus };","map":{"version":3,"names":["PermissionStatus","EventEmitter","UnavailabilityError","invariant","ExponentPedometer","PedometerEventEmitter","watchStepCount","callback","addListener","getStepCountAsync","_x","_x2","_getStepCountAsync","apply","arguments","_asyncToGenerator","start","end","getTime","isAvailableAsync","_isAvailableAsync","getPermissionsAsync","_getPermissionsAsync","defaultPermissionsResponse","requestPermissionsAsync","_requestPermissionsAsync","granted","expires","canAskAgain","status","GRANTED"],"sources":["/Users/rbsung/Documents/mobile-computing/final/node_modules/expo-sensors/src/Pedometer.ts"],"sourcesContent":["import {\n  PermissionExpiration,\n  PermissionResponse,\n  PermissionStatus,\n  EventEmitter,\n  Subscription,\n  UnavailabilityError,\n} from 'expo-modules-core';\nimport invariant from 'invariant';\n\nimport ExponentPedometer from './ExponentPedometer';\n\nconst PedometerEventEmitter = new EventEmitter(ExponentPedometer);\n\nexport type PedometerResult = {\n  /**\n   * Number of steps taken between the given dates.\n   */\n  steps: number;\n};\n\n/**\n * Callback function providing event result as an argument.\n */\nexport type PedometerUpdateCallback = (result: PedometerResult) => void;\n\n// @needsAudit\n/**\n * Subscribe to pedometer updates.\n * @param callback A callback that is invoked when new step count data is available. The callback is\n * provided with a single argument that is [`PedometerResult`](#pedometerresult).\n * @return Returns a [`Subscription`](#subscription) that enables you to call\n * `remove()` when you would like to unsubscribe the listener.\n */\nexport function watchStepCount(callback: PedometerUpdateCallback): Subscription {\n  return PedometerEventEmitter.addListener('Exponent.pedometerUpdate', callback);\n}\n\n// @needsAudit\n/**\n * Get the step count between two dates.\n * @param start A date indicating the start of the range over which to measure steps.\n * @param end A date indicating the end of the range over which to measure steps.\n * @return Returns a promise that fulfills with a [`PedometerResult`](#pedometerresult).\n *\n * As [Apple documentation states](https://developer.apple.com/documentation/coremotion/cmpedometer/1613946-querypedometerdatafromdate?language=objc):\n * > Only the past seven days worth of data is stored and available for you to retrieve. Specifying\n * > a start date that is more than seven days in the past returns only the available data.\n */\nexport async function getStepCountAsync(start: Date, end: Date): Promise<PedometerResult> {\n  if (!ExponentPedometer.getStepCountAsync) {\n    throw new UnavailabilityError('ExponentPedometer', 'getStepCountAsync');\n  }\n  invariant(start <= end, 'Pedometer: The start date must precede the end date.');\n  return await ExponentPedometer.getStepCountAsync(start.getTime(), end.getTime());\n}\n\n/**\n * Returns whether the pedometer is enabled on the device.\n * @return Returns a promise that fulfills with a `boolean`, indicating whether the pedometer is\n * available on this device.\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  return await ExponentPedometer.isAvailableAsync();\n}\n\n/**\n * Checks user's permissions for accessing pedometer.\n */\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  if (!ExponentPedometer.getPermissionsAsync) {\n    return defaultPermissionsResponse;\n  } else {\n    return await ExponentPedometer.getPermissionsAsync();\n  }\n}\n\n/**\n * Asks the user to grant permissions for accessing pedometer.\n */\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  if (!ExponentPedometer.requestPermissionsAsync) {\n    return defaultPermissionsResponse;\n  } else {\n    return await ExponentPedometer.requestPermissionsAsync();\n  }\n}\n\nconst defaultPermissionsResponse: PermissionResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED,\n};\n\nexport { Subscription, PermissionResponse, PermissionStatus, PermissionExpiration };\n"],"mappings":";AAAA,SAGEA,gBAAgB,EAChBC,YAAY,EAEZC,mBAAmB,QACd,mBAAmB;AAC1B,OAAOC,SAAS,MAAM,WAAW;AAEjC,OAAOC,iBAAiB;AAExB,IAAMC,qBAAqB,GAAG,IAAIJ,YAAY,CAACG,iBAAiB,CAAC;AAsBjE,OAAM,SAAUE,cAAcA,CAACC,QAAiC;EAC9D,OAAOF,qBAAqB,CAACG,WAAW,CAAC,0BAA0B,EAAED,QAAQ,CAAC;AAChF;AAaA,gBAAsBE,iBAAiBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAMtC,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,CANM,WAAiCC,KAAW,EAAEC,GAAS;IAC5D,IAAI,CAACb,iBAAiB,CAACK,iBAAiB,EAAE;MACxC,MAAM,IAAIP,mBAAmB,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;;IAEzEC,SAAS,CAACa,KAAK,IAAIC,GAAG,EAAE,sDAAsD,CAAC;IAC/E,aAAab,iBAAiB,CAACK,iBAAiB,CAACO,KAAK,CAACE,OAAO,EAAE,EAAED,GAAG,CAACC,OAAO,EAAE,CAAC;EAClF,CAAC;EAAA,OAAAN,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAOD,gBAAsBK,gBAAgBA,CAAA;EAAA,OAAAC,iBAAA,CAAAP,KAAA,OAAAC,SAAA;AAAA;AAErC,SAAAM,kBAAA;EAAAA,iBAAA,GAAAL,iBAAA,CAFM,aAA+B;IACpC,aAAaX,iBAAiB,CAACe,gBAAgB,EAAE;EACnD,CAAC;EAAA,OAAAC,iBAAA,CAAAP,KAAA,OAAAC,SAAA;AAAA;AAKD,gBAAsBO,mBAAmBA,CAAA;EAAA,OAAAC,oBAAA,CAAAT,KAAA,OAAAC,SAAA;AAAA;AAMxC,SAAAQ,qBAAA;EAAAA,oBAAA,GAAAP,iBAAA,CANM,aAAkC;IACvC,IAAI,CAACX,iBAAiB,CAACiB,mBAAmB,EAAE;MAC1C,OAAOE,0BAA0B;KAClC,MAAM;MACL,aAAanB,iBAAiB,CAACiB,mBAAmB,EAAE;;EAExD,CAAC;EAAA,OAAAC,oBAAA,CAAAT,KAAA,OAAAC,SAAA;AAAA;AAKD,gBAAsBU,uBAAuBA,CAAA;EAAA,OAAAC,wBAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAM5C,SAAAW,yBAAA;EAAAA,wBAAA,GAAAV,iBAAA,CANM,aAAsC;IAC3C,IAAI,CAACX,iBAAiB,CAACoB,uBAAuB,EAAE;MAC9C,OAAOD,0BAA0B;KAClC,MAAM;MACL,aAAanB,iBAAiB,CAACoB,uBAAuB,EAAE;;EAE5D,CAAC;EAAA,OAAAC,wBAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMS,0BAA0B,GAAuB;EACrDG,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE,OAAO;EAChBC,WAAW,EAAE,IAAI;EACjBC,MAAM,EAAE7B,gBAAgB,CAAC8B;CAC1B;AAED,SAA2C9B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}