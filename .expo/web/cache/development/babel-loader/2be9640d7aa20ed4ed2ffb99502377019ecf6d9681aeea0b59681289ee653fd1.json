{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { assertSensorEventEnabledAsync, getPermissionsAsync, isSensorEnabledAsync, requestPermissionsAsync } from \"./utils/isSensorEnabledAsync.web\";\nvar eventName = 'devicemotion';\nexport default {\n  get name() {\n    return 'ExponentGyroscope';\n  },\n  isAvailableAsync: function () {\n    var _isAvailableAsync = _asyncToGenerator(function* () {\n      if (typeof DeviceMotionEvent === 'undefined') {\n        return false;\n      }\n      return yield isSensorEnabledAsync(eventName);\n    });\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n    return isAvailableAsync;\n  }(),\n  _handleMotion: function _handleMotion(_ref) {\n    var accelerationIncludingGravity = _ref.accelerationIncludingGravity;\n    SyntheticPlatformEmitter.emit('gyroscopeDidUpdate', {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z\n    });\n  },\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: requestPermissionsAsync,\n  startObserving: function startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving: function stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  }\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","assertSensorEventEnabledAsync","getPermissionsAsync","isSensorEnabledAsync","requestPermissionsAsync","eventName","name","isAvailableAsync","_isAvailableAsync","_asyncToGenerator","DeviceMotionEvent","apply","arguments","_handleMotion","_ref","accelerationIncludingGravity","emit","x","y","z","startObserving","window","addEventListener","stopObserving","removeEventListener"],"sources":["/Users/rbsung/Documents/mobile-computing/final/node_modules/expo-sensors/src/ExponentGyroscope.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport {\n  assertSensorEventEnabledAsync,\n  getPermissionsAsync,\n  isSensorEnabledAsync,\n  requestPermissionsAsync,\n} from './utils/isSensorEnabledAsync.web';\n\nconst eventName = 'devicemotion';\n\nexport default {\n  get name(): string {\n    return 'ExponentGyroscope';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof DeviceMotionEvent === 'undefined') {\n      return false;\n    }\n    return await isSensorEnabledAsync(eventName);\n  },\n  _handleMotion({ accelerationIncludingGravity }) {\n    SyntheticPlatformEmitter.emit('gyroscopeDidUpdate', {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z,\n    });\n  },\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  },\n};\n"],"mappings":";AAAA,SAASA,wBAAwB,QAAQ,mBAAmB;AAE5D,SACEC,6BAA6B,EAC7BC,mBAAmB,EACnBC,oBAAoB,EACpBC,uBAAuB;AAGzB,IAAMC,SAAS,GAAG,cAAc;AAEhC,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,mBAAmB;EAC5B,CAAC;EACKC,gBAAgB;IAAA,IAAAC,iBAAA,GAAAC,iBAAA;MACpB,IAAI,OAAOC,iBAAiB,KAAK,WAAW,EAAE;QAC5C,OAAO,KAAK;;MAEd,aAAaP,oBAAoB,CAACE,SAAS,CAAC;IAC9C,CAAC;IAAA,SAAAE,iBAAA;MAAA,OAAAC,iBAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAL,gBAAA;EAAA;EACDM,aAAa,WAAAA,cAAAC,IAAA,EAAiC;IAAA,IAA9BC,4BAA4B,GAAAD,IAAA,CAA5BC,4BAA4B;IAC1Cf,wBAAwB,CAACgB,IAAI,CAAC,oBAAoB,EAAE;MAClDC,CAAC,EAAEF,4BAA4B,CAACE,CAAC;MACjCC,CAAC,EAAEH,4BAA4B,CAACG,CAAC;MACjCC,CAAC,EAAEJ,4BAA4B,CAACI;KACjC,CAAC;EACJ,CAAC;EACDjB,mBAAmB,EAAnBA,mBAAmB;EACnBE,uBAAuB,EAAvBA,uBAAuB;EACvBgB,cAAc,WAAAA,eAAA;IACZnB,6BAA6B,CAACI,SAAS,CAAC;IAExCgB,MAAM,CAACC,gBAAgB,CAACjB,SAAS,EAAE,IAAI,CAACQ,aAAa,CAAC;EACxD,CAAC;EACDU,aAAa,WAAAA,cAAA;IACXF,MAAM,CAACG,mBAAmB,CAACnB,SAAS,EAAE,IAAI,CAACQ,aAAa,CAAC;EAC3D;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}