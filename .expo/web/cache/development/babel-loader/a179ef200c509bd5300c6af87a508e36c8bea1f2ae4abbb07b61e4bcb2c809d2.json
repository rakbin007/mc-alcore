{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { assertSensorEventEnabledAsync, getPermissionsAsync, isSensorEnabledAsync, requestPermissionsAsync } from \"./utils/isSensorEnabledAsync.web\";\nvar scalar = Math.PI / 180;\nvar eventName = 'deviceorientation';\nexport default {\n  get name() {\n    return 'ExponentAccelerometer';\n  },\n  isAvailableAsync: function () {\n    var _isAvailableAsync = _asyncToGenerator(function* () {\n      if (typeof DeviceOrientationEvent === 'undefined') {\n        return false;\n      }\n      return yield isSensorEnabledAsync(eventName);\n    });\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n    return isAvailableAsync;\n  }(),\n  _handleMotion: function _handleMotion(_ref) {\n    var alpha = _ref.alpha,\n      beta = _ref.beta,\n      gamma = _ref.gamma;\n    SyntheticPlatformEmitter.emit('accelerometerDidUpdate', {\n      x: gamma * scalar,\n      y: beta * scalar,\n      z: alpha * scalar\n    });\n  },\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: requestPermissionsAsync,\n  startObserving: function startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving: function stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  }\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","assertSensorEventEnabledAsync","getPermissionsAsync","isSensorEnabledAsync","requestPermissionsAsync","scalar","Math","PI","eventName","name","isAvailableAsync","_isAvailableAsync","_asyncToGenerator","DeviceOrientationEvent","apply","arguments","_handleMotion","_ref","alpha","beta","gamma","emit","x","y","z","startObserving","window","addEventListener","stopObserving","removeEventListener"],"sources":["/Users/rbsung/Documents/mobile-computing/final/node_modules/expo-sensors/src/ExponentAccelerometer.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport {\n  assertSensorEventEnabledAsync,\n  getPermissionsAsync,\n  isSensorEnabledAsync,\n  requestPermissionsAsync,\n} from './utils/isSensorEnabledAsync.web';\n\nconst scalar = Math.PI / 180;\nconst eventName = 'deviceorientation';\n\nexport default {\n  get name(): string {\n    return 'ExponentAccelerometer';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof DeviceOrientationEvent === 'undefined') {\n      return false;\n    }\n    return await isSensorEnabledAsync(eventName);\n  },\n  _handleMotion({ alpha, beta, gamma }) {\n    SyntheticPlatformEmitter.emit('accelerometerDidUpdate', {\n      x: gamma * scalar,\n      y: beta * scalar,\n      z: alpha * scalar,\n    });\n  },\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  },\n};\n"],"mappings":";AAAA,SAASA,wBAAwB,QAAQ,mBAAmB;AAE5D,SACEC,6BAA6B,EAC7BC,mBAAmB,EACnBC,oBAAoB,EACpBC,uBAAuB;AAGzB,IAAMC,MAAM,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC5B,IAAMC,SAAS,GAAG,mBAAmB;AAErC,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,uBAAuB;EAChC,CAAC;EACKC,gBAAgB;IAAA,IAAAC,iBAAA,GAAAC,iBAAA;MACpB,IAAI,OAAOC,sBAAsB,KAAK,WAAW,EAAE;QACjD,OAAO,KAAK;;MAEd,aAAaV,oBAAoB,CAACK,SAAS,CAAC;IAC9C,CAAC;IAAA,SAAAE,iBAAA;MAAA,OAAAC,iBAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAL,gBAAA;EAAA;EACDM,aAAa,WAAAA,cAAAC,IAAA,EAAuB;IAAA,IAApBC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAChCpB,wBAAwB,CAACqB,IAAI,CAAC,wBAAwB,EAAE;MACtDC,CAAC,EAAEF,KAAK,GAAGf,MAAM;MACjBkB,CAAC,EAAEJ,IAAI,GAAGd,MAAM;MAChBmB,CAAC,EAAEN,KAAK,GAAGb;KACZ,CAAC;EACJ,CAAC;EACDH,mBAAmB,EAAnBA,mBAAmB;EACnBE,uBAAuB,EAAvBA,uBAAuB;EACvBqB,cAAc,WAAAA,eAAA;IACZxB,6BAA6B,CAACO,SAAS,CAAC;IACxCkB,MAAM,CAACC,gBAAgB,CAACnB,SAAS,EAAE,IAAI,CAACQ,aAAa,CAAC;EACxD,CAAC;EACDY,aAAa,WAAAA,cAAA;IACXF,MAAM,CAACG,mBAAmB,CAACrB,SAAS,EAAE,IAAI,CAACQ,aAAa,CAAC;EAC3D;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}