{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport DeviceSensor from \"./DeviceSensor\";\nimport ExponentDeviceMotion from \"./ExponentDeviceMotion\";\nexport var DeviceMotionOrientation;\n(function (DeviceMotionOrientation) {\n  DeviceMotionOrientation[DeviceMotionOrientation[\"Portrait\"] = 0] = \"Portrait\";\n  DeviceMotionOrientation[DeviceMotionOrientation[\"RightLandscape\"] = 90] = \"RightLandscape\";\n  DeviceMotionOrientation[DeviceMotionOrientation[\"UpsideDown\"] = 180] = \"UpsideDown\";\n  DeviceMotionOrientation[DeviceMotionOrientation[\"LeftLandscape\"] = -90] = \"LeftLandscape\";\n})(DeviceMotionOrientation || (DeviceMotionOrientation = {}));\nexport var DeviceMotionSensor = function (_DeviceSensor) {\n  _inherits(DeviceMotionSensor, _DeviceSensor);\n  var _super = _createSuper(DeviceMotionSensor);\n  function DeviceMotionSensor() {\n    var _this;\n    _classCallCheck(this, DeviceMotionSensor);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.Gravity = ExponentDeviceMotion.Gravity;\n    return _this;\n  }\n  _createClass(DeviceMotionSensor, [{\n    key: \"isAvailableAsync\",\n    value: function () {\n      var _isAvailableAsync = _asyncToGenerator(function* () {\n        return _get(_getPrototypeOf(DeviceMotionSensor.prototype), \"isAvailableAsync\", this).call(this);\n      });\n      function isAvailableAsync() {\n        return _isAvailableAsync.apply(this, arguments);\n      }\n      return isAvailableAsync;\n    }()\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      return _get(_getPrototypeOf(DeviceMotionSensor.prototype), \"addListener\", this).call(this, listener);\n    }\n  }]);\n  return DeviceMotionSensor;\n}(DeviceSensor);\nexport var Gravity = ExponentDeviceMotion.Gravity;\nexport default new DeviceMotionSensor(ExponentDeviceMotion, 'deviceMotionDidUpdate');","map":{"version":3,"names":["DeviceSensor","ExponentDeviceMotion","DeviceMotionOrientation","DeviceMotionSensor","_DeviceSensor","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","Gravity","_createClass","key","value","_isAvailableAsync","_asyncToGenerator","_get","_getPrototypeOf","prototype","isAvailableAsync","addListener","listener"],"sources":["/Users/rbsung/Documents/mobile-computing/final/node_modules/expo-sensors/src/DeviceMotion.ts"],"sourcesContent":["import DeviceSensor, { Listener, Subscription } from './DeviceSensor';\nimport ExponentDeviceMotion from './ExponentDeviceMotion';\n\nexport type DeviceMotionMeasurement = {\n  /**\n   * Device acceleration on the three axis as an object with `x`, `y`, `z` keys. Expressed in meters per second squared (m/s^2).\n   */\n  acceleration: null | {\n    x: number;\n    y: number;\n    z: number;\n  };\n  /**\n   * Device acceleration with the effect of gravity on the three axis as an object with `x`, `y`, `z` keys. Expressed in meters per second squared (m/s^2).\n   */\n  accelerationIncludingGravity: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  /**\n   * Device's orientation in space as an object with alpha, beta, gamma keys where alpha is for rotation around Z axis, beta for X axis rotation and gamma for Y axis rotation.\n   */\n  rotation: {\n    alpha: number;\n    beta: number;\n    gamma: number;\n  };\n  /**\n   * Device's rate of rotation in space expressed in degrees per second (deg/s).\n   */\n  rotationRate: null | {\n    /**\n     * Rotation in X axis.\n     */\n    alpha: number;\n    /**\n     * Rotation in Y axis.\n     */\n    beta: number;\n    /**\n     * Rotation in Z axis.\n     */\n    gamma: number;\n  };\n  /**\n   * Interval at which data is obtained from the native platform. Expressed in **milliseconds** (ms).\n   */\n  interval: number;\n  /**\n   * Device orientation based on screen rotation. Value is one of:\n   * - `0` (portrait),\n   * - `90` (right landscape),\n   * - `180` (upside down),\n   * - `-90` (left landscape).\n   */\n  orientation: DeviceMotionOrientation;\n};\n\nexport enum DeviceMotionOrientation {\n  Portrait = 0,\n  RightLandscape = 90,\n  UpsideDown = 180,\n  LeftLandscape = -90,\n}\n\nexport class DeviceMotionSensor extends DeviceSensor<DeviceMotionMeasurement> {\n  /**\n   * Constant value representing standard gravitational acceleration for Earth (`9.80665` m/s^2).\n   */\n  Gravity: number = ExponentDeviceMotion.Gravity;\n\n  /**\n   * > **info** You should always check the sensor availability before attempting to use it.\n   *\n   * Returns whether the accelerometer is enabled on the device.\n   *\n   * On mobile web, you must first invoke `DeviceMotion.requestPermissionsAsync()` in a user interaction (i.e. touch event) before you can use this module.\n   * If the `status` is not equal to `granted` then you should inform the end user that they may have to open settings.\n   *\n   * On **web** this starts a timer and waits to see if an event is fired. This should predict if the iOS device has the **device orientation** API disabled in\n   * **Settings > Safari > Motion & Orientation Access**. Some devices will also not fire if the site isn't hosted with **HTTPS** as `DeviceMotion` is now considered a secure API.\n   * There is no formal API for detecting the status of `DeviceMotion` so this API can sometimes be unreliable on web.\n   *\n   * @return A promise that resolves to a `boolean` denoting the availability of device motion sensor.\n   */\n  async isAvailableAsync(): Promise<boolean> {\n    return super.isAvailableAsync();\n  }\n\n  /**\n   * Subscribe for updates to the device motion sensor.\n   *\n   * @param listener A callback that is invoked when a device motion sensor update is available. When invoked,\n   * the listener is provided a single argument that is a `DeviceMotionMeasurement` object.\n   *\n   * @return A subscription that you can call `remove()` on when you would like to unsubscribe the listener.\n   */\n  addListener(listener: Listener<DeviceMotionMeasurement>): Subscription {\n    return super.addListener(listener);\n  }\n}\n\n/**\n * Constant value representing standard gravitational acceleration for Earth (`9.80665` m/s^2).\n */\nexport const Gravity: number = ExponentDeviceMotion.Gravity;\n\nexport default new DeviceMotionSensor(ExponentDeviceMotion, 'deviceMotionDidUpdate');\n"],"mappings":";;;;;;;;;AAAA,OAAOA,YAAwC;AAC/C,OAAOC,oBAAoB;AA0D3B,WAAYC,uBAKX;AALD,WAAYA,uBAAuB;EACjCA,uBAAA,CAAAA,uBAAA,8BAAY;EACZA,uBAAA,CAAAA,uBAAA,2CAAmB;EACnBA,uBAAA,CAAAA,uBAAA,oCAAgB;EAChBA,uBAAA,CAAAA,uBAAA,0CAAmB;AACrB,CAAC,EALWA,uBAAuB,KAAvBA,uBAAuB;AAOnC,WAAaC,kBAAmB,aAAAC,aAAA;EAAAC,SAAA,CAAAF,kBAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,kBAAA;EAAA,SAAAA,mBAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,kBAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAL,KAAA,CAI9BW,OAAO,GAAWlB,oBAAoB,CAACkB,OAAO;IAAA,OAAAX,KAAA;EAAA;EAAAY,YAAA,CAAAjB,kBAAA;IAAAkB,GAAA;IAAAC,KAAA;MAAA,IAAAC,iBAAA,GAAAC,iBAAA,CAgB9C,aAAsB;QACpB,OAAAC,IAAA,CAAAC,eAAA,CAAAvB,kBAAA,CAAAwB,SAAA,6BAAAX,IAAA;MACF,CAAC;MAAA,SAAAY,iBAAA;QAAA,OAAAL,iBAAA,CAAAN,KAAA,OAAAN,SAAA;MAAA;MAAA,OAAAiB,gBAAA;IAAA;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAUD,SAAAO,YAAYC,QAA2C;MACrD,OAAAL,IAAA,CAAAC,eAAA,CAAAvB,kBAAA,CAAAwB,SAAA,wBAAAX,IAAA,OAAyBc,QAAQ;IACnC;EAAC;EAAA,OAAA3B,kBAAA;AAAA,EAlCqCH,YAAqC;AAwC7E,OAAO,IAAMmB,OAAO,GAAWlB,oBAAoB,CAACkB,OAAO;AAE3D,eAAe,IAAIhB,kBAAkB,CAACF,oBAAoB,EAAE,uBAAuB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}