{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport DeviceSensor from \"./DeviceSensor\";\nimport ExponentMagnetometerUncalibrated from \"./ExponentMagnetometerUncalibrated\";\nexport var MagnetometerUncalibratedSensor = function (_DeviceSensor) {\n  _inherits(MagnetometerUncalibratedSensor, _DeviceSensor);\n  var _super = _createSuper(MagnetometerUncalibratedSensor);\n  function MagnetometerUncalibratedSensor() {\n    _classCallCheck(this, MagnetometerUncalibratedSensor);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(MagnetometerUncalibratedSensor);\n}(DeviceSensor);\nexport default new MagnetometerUncalibratedSensor(ExponentMagnetometerUncalibrated, 'magnetometerUncalibratedDidUpdate');","map":{"version":3,"names":["DeviceSensor","ExponentMagnetometerUncalibrated","MagnetometerUncalibratedSensor","_DeviceSensor","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass"],"sources":["/Users/rbsung/Documents/mobile-computing/final/node_modules/expo-sensors/src/MagnetometerUncalibrated.ts"],"sourcesContent":["import DeviceSensor from './DeviceSensor';\nimport ExponentMagnetometerUncalibrated from './ExponentMagnetometerUncalibrated';\n\n/**\n * Each of these keys represents the uncalibrated strength of magnetic field along that particular axis measured in microteslas (`Î¼T`).\n */\nexport type MagnetometerUncalibratedMeasurement = {\n  /**\n   * Value representing uncalibrated strength of magnetic field recorded in X axis.\n   */\n  x: number;\n  /**\n   * Value representing uncalibrated strength of magnetic field recorded in Y axis.\n   */\n  y: number;\n  /**\n   * Value representing uncalibrated strength of magnetic field recorded in Z axis.\n   */\n  z: number;\n};\n\n/**\n * @platform android\n * @platform ios\n */\nexport class MagnetometerUncalibratedSensor extends DeviceSensor<MagnetometerUncalibratedMeasurement> {}\n\nexport default new MagnetometerUncalibratedSensor(\n  ExponentMagnetometerUncalibrated,\n  'magnetometerUncalibratedDidUpdate'\n);\n"],"mappings":";;;;;;;AAAA,OAAOA,YAAY;AACnB,OAAOC,gCAAgC;AAwBvC,WAAaC,8BAA+B,aAAAC,aAAA;EAAAC,SAAA,CAAAF,8BAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,8BAAA;EAAA,SAAAA,+BAAA;IAAAK,eAAA,OAAAL,8BAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAA,OAAAC,YAAA,CAAAR,8BAAA;AAAA,EAAQF,YAAiD;AAErG,eAAe,IAAIE,8BAA8B,CAC/CD,gCAAgC,EAChC,mCAAmC,CACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}